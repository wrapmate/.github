name: Auto-Seed Lovable Constraints

# Since GitHub Actions doesn't support 'repository' event triggers,
# this workflow runs on a schedule and checks for new repositories

on:
  schedule:
    - cron: '*/5 * * * *'  # Every 5 minutes
  workflow_dispatch:  # Manual trigger for testing

jobs:
  seed-constraints:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout seeding script
        uses: actions/checkout@v4
        with:
          repository: wrapmate/lovable-prototype-template
          token: ${{ secrets.GH_PAT }}
          path: template

      - name: Find and process new repos
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          echo "Checking for new Lovable repositories..."

          # Get repos created in last 10 minutes
          CUTOFF=$(date -u -d '10 minutes ago' +%Y-%m-%dT%H:%M:%SZ)

          # Query org repos (with pagination to get all repos)
          REPOS=$(gh api --paginate /orgs/wrapmate/repos \
            --jq ".[] | select(.created_at > \"$CUTOFF\") | select(.name | startswith(\"proto-\") or startswith(\"lovable-\")) | .name" \
            2>/dev/null || echo "")

          if [ -z "$REPOS" ]; then
            echo "No new repositories found"
            exit 0
          fi

          echo "Found repositories: $REPOS"

          # Process each repo
          for REPO_NAME in $REPOS; do
            echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
            echo "Processing: $REPO_NAME"

            # Check if constraints exist
            if gh api "/repos/wrapmate/$REPO_NAME/contents/.lovable/constraints.md" >/dev/null 2>&1; then
              echo "✓ Constraints already exist"
              continue
            fi

            echo "Seeding constraints..."

            # Run the seeding script
            cd template
            chmod +x scripts/seed-lovable-constraints.sh
            ./scripts/seed-lovable-constraints.sh "$REPO_NAME" || echo "⚠ Seeding failed for $REPO_NAME"
            cd ..

            echo "✓ Completed $REPO_NAME"
          done

          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo "Workflow completed"
